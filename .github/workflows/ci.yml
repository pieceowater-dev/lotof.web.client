# Main CI workflow: build, publish Docker image, and deploy
name: Build, Publish & Deploy


 # Trigger on push to main/dev branches and version tags
on:
  push:
    branches: [ "main", "test", "dev" ]
    tags: [ 'v*.*.*' ]


 # Global environment variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Get short commit SHA
        id: get_sha
        run: echo "GIT_SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Prepare GitHub token for BuildKit
        run: echo "${{ secrets.GH_PRIVATE_PKG_PAT }}" > .gh_token
      - name: Build and push Docker images
        id: build-and-push
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.GIT_SHORT_SHA }}
          labels: ${{ steps.meta.outputs.labels }}
          secret-files: |
            gh_token=.gh_token
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: build-and-push
    steps:
      - name: Update state repo
        uses: pieceowater-dev/lotof.cloud.ci/.github/actions/update-state@main
        with:
          repo-name: ${{ github.event.repository.name }}
          commit-sha: ${{ github.sha }}
          branch: ${{ github.ref_name }}
          ssh-key: ${{ secrets.STATE_REPO_SSH_KEY }}
